@use 'sass:math';

@mixin card-active {
    transform: translateX(0) rotateY(0) rotateZ(0) rotateX(0) translateZ(0);
  }
  
  @mixin card-exiting-to-left {
    transform: translateX(-116%) rotateY(-24deg) rotateZ(0) rotateX(2deg)
      translateZ(-156px);
  }
  
  @mixin card-exiting-to-right {
    transform: translateX(116%) rotateY(24deg) rotateZ(0) rotateX(2deg)
      translateZ(-156px);
  }
  
  $card-count: 16; 
  $step-distance: 100%;  // You can adjust this value as needed
$half-step-distance: $step-distance / 1;

  @mixin card-exited-to-left($steps) {
    $rotateZ: -4 + ($steps * -2);
    $translateX: -3 - ($steps * 8);
    $translateZ: -140 - ($steps * 20);
    transform: translateX($translateX ) rotateY(0) rotateZ($rotateZ * 1deg)
      rotateX(0) translateZ($translateZ * 1px);
  }
  
  @mixin card-exited-to-right($steps) {
    $rotateZ: 4 + ($steps * 2);
    $translateX: 3 + ($steps * 8);
    $translateZ: -140 - ($steps * 20);
    transform: translateX($translateX ) rotateY(0) rotateZ($rotateZ * 1deg)
      rotateX(0) translateZ($translateZ * 1px);
  }
  


  @mixin animate-active($index) {
    @keyframes animate#{$index}-active {
      @for $i from 0 through $card-count - 1 {
        $percentage: $step-distance * $i;
        $active: $i == $index - 1;
        $steps: $i - ($index - 1);
  
        @if not $active {
          #{$percentage } {
            @if $steps > 0 {
              @include card-exited-to-left($steps);
            } @else {
              @include card-exited-to-right((0 - $steps));
            }
          }
        }
  
        @if ($active) {
          @if $i > 0 {
            #{($percentage - $half-step-distance) } {
              @include card-exiting-to-right;
            }
          }
  
          #{$percentage } {
            @include card-active;
          }
  
          #{($percentage + $half-step-distance) } {
            @include card-exiting-to-left;
          }
        }
      }
    }
  }
  
  @mixin animate-inactive($index) {
    @keyframes animate#{$index}-inactive {
      @for $i from 0 through $card-count - 1 {
        $percentage: $step-distance * $i;
        $active: $i == $index - 1;
        $steps: $i - ($index - 1);
  
        @if not $active {
          #{$percentage } {
            @if $steps > 0 {
              @include card-exited-to-left($steps);
            } @else {
              @include card-exited-to-right((0 - $steps));
            }
          }
        }
  
        @if ($active) {
          #{$percentage } {
            @include card-active;
          }
        }
      }
    }
  }
  
  @mixin card-stack-keyframes($index) {
    @keyframes card-stack-#{$index} {
      @for $i from 0 through $card-count - 1 {
        $percentage: $step-distance * $i;
        $steps: $i - ($index - 1);
        $rotate: if($steps > 0, -24deg, 24deg);
  
        @if $i > 0 {
          #{($percentage - $half-step-distance) } {
            transform: rotateY($rotate);
          }
        }
  
        #{$percentage } {
          transform: rotateY(0deg);
        }
  
        #{($percentage + $half-step-distance) } {
          transform: rotateY($rotate) translateZ($rotate);
        }
      }
    }
  }
  
 